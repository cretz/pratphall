///<reference path='all.ts' />

declare var PCRE_VERSION: number;
declare var PREG_BACKTRACK_LIMIT_ERROR: number;
declare var PREG_BAD_UTF8_ERROR: number;
declare var PREG_BAD_UTF8_OFFSET_ERROR: number;
declare var PREG_INTERNAL_ERROR: number;
declare var PREG_NO_ERROR: number;
declare var PREG_OFFSET_CAPTURE: number;
declare var PREG_PATTERN_ORDER: number;
declare var PREG_RECURSION_LIMIT_ERROR: number;
declare var PREG_SET_ORDER: number;
declare var PREG_SPLIT_DELIM_CAPTURE: number;
declare var PREG_SPLIT_NO_EMPTY: number;
declare var PREG_SPLIT_OFFSET_CAPTURE: number;

declare function preg_filter(pattern: string, replacement: string, subject: string, limit?: number, $count?: number): string;
declare function preg_filter(pattern: string[], replacement: string, subject: string, limit?: number, $count?: number): string;
declare function preg_filter(pattern: string, replacement: string[], subject: string, limit?: number, $count?: number): string;
declare function preg_filter(pattern: string[], replacement: string[], subject: string, limit?: number, $count?: number): string;
declare function preg_filter(pattern: string, replacement: string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_filter(pattern: string, replacement: string[], subject: string[], limit?: number, $count?: number): string[];
declare function preg_filter(pattern: string[], replacement: string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_filter(pattern: string[], replacement: string[], subject: string[], limit?: number, $count?: number): string[];
declare function preg_grep(pattern: string, input: Array, flags?: number): Array;
declare function preg_last_error(): number;
declare function preg_match(pattern: string, subject: string, $matches?: Array, flags?: number, offset?: number): number;
declare function preg_match_all(pattern: string, subject: string, $matches?: Array, flags?: number, offset?: number): number;
declare function preg_quote(str: string, delimiter?: string): string;
declare function preg_replace(pattern: string, replacement: string, subject: string, limit?: number, $count?: number): string;
declare function preg_replace(pattern: string[], replacement: string, subject: string, limit?: number, $count?: number): string;
declare function preg_replace(pattern: string, replacement: string[], subject: string, limit?: number, $count?: number): string;
declare function preg_replace(pattern: string[], replacement: string[], subject: string, limit?: number, $count?: number): string;
declare function preg_replace(pattern: string, replacement: string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_replace(pattern: string, replacement: string[], subject: string[], limit?: number, $count?: number): string[];
declare function preg_replace(pattern: string[], replacement: string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_replace(pattern: string[], replacement: string[], subject: string[], limit?: number, $count?: number): string[];
declare function preg_replace_callback(pattern: string, replacement: (matches: string[]) => string, subject: string, limit?: number, $count?: number): string;
declare function preg_replace_callback(pattern: string[], replacement: (matches: string[]) => string, subject: string, limit?: number, $count?: number): string;
declare function preg_replace_callback(pattern: string, replacement: (matches: string[]) => string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_replace_callback(pattern: string[], replacement: (matches: string[]) => string, subject: string[], limit?: number, $count?: number): string[];
declare function preg_split(pattern: string, subject: string, limit?: number, flags?: number): any[];